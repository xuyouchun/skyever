
    这个问题是从字符串中删除字符的问题，也许您会误解“删除”的意思，“删除”
并不是把这个字符的值赋为零就完了，而是要把后面的元素向前移，覆盖掉要删除的字
符。

    本例中笔者应用指的方法，也许您有点生疏，不过笔者可以在这里给您解释清楚：

    其中有一个问题是：指针是可以改变指向的，而数组的名实际上也是指针的性质，
因为它的值也是内存的地址，但是您不可以改变它的指向：
    例如：char a[10];  char *p = a;
    这样的话：语句p++;是正确的，而语句a++则是错误的。原因已经说明。

    于是笔者在这里定义了一个指针来指向s，这样来简接地访问数组a，这种访问方法
实际上是最快速的。

    还有：对于while(*p0)  *p0++ = *(p0+1);的解释：
    读者可以不大明白：到底是p0增还是*p0增？就是说到底是内容增还是地址增？
    实际上这是一个运算符的优先顺序问题：指针运算要高于自增运算，于是增的实际
上是地址，读者要是实在搞不清楚，不妨加括号来限定：*(p++)。

    还有，由于赋值运算符运算顺序是由后向前的，于是先执行后面的*(p0+1)，而这时
的p0还没有自增，于是便取得其内容。读者在以后的做题过程中要逐渐领会到这些优先
级及其运算顺序。

