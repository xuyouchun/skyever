
    这种类型的题在考试过程中是经常要考的，因为在实际编程的时候也经常会用得到
，比如说要在图形屏幕上输出一个数字，而图形方式下是只能输出字符串的，于是这时
就要用到转化问题。

    而这里说的是从字符串向数字转化，如果前面没有'-'的话，也许会简单一些，而有
个'-'，不一样的只是原来从第一个字符开始，而现在从第二个字符开始就是了。在返回
的时候再看一看是不是有'-'，再决定是不是返回所得数的相反数。

    不要忘了要定义一个长整型的变量来保存计算出来的值，并且在开始要赋为零。

    还有，读者不要看不明白程序中的*p是什么意思，实际上就是p[0]，而*(p+n)实际
上就是p[n]。用*p表示，在写法上比较简便。

    顺便一提，实际上库函数中有sscanf()，可以直接方便实现这种转化，不过在这里
是不能用的。如果用在此处应该是：sscanf(p, "%ld", &Num);  与其有相反功能的是实
现数字向字符串的转化，是sprintf()。如sprintf(str, "%d", 100)等。多知道一些常
识或许会激发您的灵感
